TGOS_sample %>% colnames()
tmp01 <- fread("../data_v1/address.csv", encoding = "UTF-8")
colnames(tmp01) <- c("Name", "Address", "Website", "Type")
address_tmp <- tmp01$Address %>%
unicode2utf8() %>%
sapply(., zen2han, USE.NAMES = F)
tmp01$useless_addr <- address_tmp %>% sapply(., addr.SPby.doornum, useless = T, USE.NAMES = F)
tmp01$useful_addr <- address_tmp %>% sapply(., addr.SPby.doornum, useless = F, USE.NAMES = F)
tmp01$clean_addr <- tmp01$useful_addr %>% sapply(., rm.headpostcode) %>% gsub(" +", "", .)
tmp01$clean_addr <- tmp01$clean_addr %>% sapply(., rm.comb.addr, USE.NAMES = F)
tmp01$clean_addr <- tmp01$clean_addr %>%
sapply(., addr.SPby.doornum, useless = F) %>%
add.doornum.word(x_vec = .)
tmp02 <- tmp01[useless_addr!="wrong_address"]
tmp02_others <- tmp01[useless_addr=="wrong_address"]
input <- tmp02[, .(id = .I, Address = clean_addr,
Response_Address = NA, Response_X = NA, Response_Y = NA)]
input
# ---
# 記得要上傳的檔案，必須用 big 編碼
write.csv(x = input, file = "../data_v1/input.csv",
fileEncoding = "big5", row.names = F)
tmp02_others
View(tmp02_others)
View(tmp02_others)
View(tmp02)
tmp03 <- readLines(con = "../data_v1/Address_Finish_v2.csv", encoding = "UTF-8")
tmp03 <- fread(con = "../data_v1/Address_Finish_v2.csv", encoding = "UTF-8")
tmp03 <- fread("../data_v1/Address_Finish_v2.csv", encoding = "UTF-8")
tmp03 %>% head
View(tmp03)
View(tmp01)
tmp03 %>% head
tmp03$id %>% max
tmp03 <- fread("../data_v1/Address_Finish_v2.csv", encoding = "UTF-8")
tmp03 %>% head
View(tmp03)
View(tmp03)
View(tmp02_others)
tmp03 <- fread("../data_v1/Address_Finish_v2.csv", encoding = "UTF-8")
tmp03 %>% head
tmp02
tmp04 <- cbind(tmp02, tmp03[, !"Address"])
tmp04
View(tmp04)
tmp04 <- cbind(tmp02, tmp03[, !c("id", "Address")])
(tmp04$Response_Address=="找不到指定的門牌地址。") %>% which
idx <- (tmp04$Response_Address=="找不到指定的門牌地址。") %>% which
tmp02_others
tmp02_others %>% colnames()
idx <- (tmp04$Response_Address=="找不到指定的門牌地址。") %>% which
tmp04[idx]
tmp04[idx] %>% colnames()
tmp04[idx] %>% colnames()
tmp02_others %>% colnames()
tmp04[idx][, !c("Response_Address", "Response_X", "Response_Y")]
tmp05 <- tmp04[-idx]
tmp05_others <- cbind(tmp02_others, tmp04[idx][, !c("Response_Address", "Response_X", "Response_Y")])
tmp05_others <- rbind(tmp02_others,
tmp04[idx][, !c("Response_Address", "Response_X", "Response_Y")])
View(tmp05_others)
tmp02_others
View(tmp02_others)
rm(list = setdiff(ls(), lsf.str())); invisible(gc())
library(knitr)
library(kableExtra)
library(dplyr)
library(data.table)
library(Nippon)
library(stringi)
knitr::opts_chunk$set(
echo = TRUE,
message = FALSE,
warning = FALSE
)
TGOS_sample <- fread("../data_v1/Address_TGOS_sample.csv")
TGOS_sample %>% colnames()
tmp01 <- fread("../data_v1/address.csv", encoding = "UTF-8")
colnames(tmp01) <- c("Name", "Address", "Website", "Type")
address_tmp <- tmp01$Address %>%
unicode2utf8() %>%
sapply(., zen2han, USE.NAMES = F)
tmp01$useless_addr <- address_tmp %>% sapply(., addr.SPby.doornum, useless = T, USE.NAMES = F)
tmp01$useful_addr <- address_tmp %>% sapply(., addr.SPby.doornum, useless = F, USE.NAMES = F)
tmp01$clean_addr <- tmp01$useful_addr %>% sapply(., rm.headpostcode) %>% gsub(" +", "", .)
tmp01$clean_addr <- tmp01$clean_addr %>% sapply(., rm.comb.addr, USE.NAMES = F)
tmp01$clean_addr <- tmp01$clean_addr %>%
sapply(., addr.SPby.doornum, useless = F) %>%
add.doornum.word(x_vec = .)
tmp02 <- tmp01[useless_addr!="wrong_address"]
tmp02_others <- tmp01[useless_addr=="wrong_address"]
input <- tmp02[, .(id = .I, Address = clean_addr,
Response_Address = NA, Response_X = NA, Response_Y = NA)]
input
# ---
# 記得要上傳的檔案，必須用 big 編碼
write.csv(x = input, file = "../data_v1/input.csv",
fileEncoding = "big5", row.names = F)
tmp02_others
tmp02_others$clean_addr <- tmp02_others$useful_addr
tmp03 <- fread("../data_v1/Address_Finish_v2.csv", encoding = "UTF-8")
tmp04 <- cbind(tmp02, tmp03[, !c("id", "Address")])
idx <- (tmp04$Response_Address=="找不到指定的門牌地址。") %>% which
tmp05 <- tmp04[-idx]
tmp05_others <- rbind(tmp02_others,
tmp04[idx][, !c("Response_Address", "Response_X", "Response_Y")])
View(tmp05_others)
tmp05
t1 <- tmp05$Response_Address %>% gregexpr(pattern = ";", text = .)
t1 <- tmp05$Response_Address %>% sapply(., gregexpr, pattern = ";")
t1[[1]]
t1[[5]]
t1 <- tmp05$Response_Address %>% sapply(., gregexpr, pattern = ";")
t1 %>% lengths() %>% table
# ---
# 處理TGOS地址轉經緯度的結果
# 針對多個地址結果，取出第一個
# 如果原本就只有一個地址，就直接回傳。
# 如果偵測到";"，就拆解並回傳第一個。
# 地址用apply送進來
x <- tmp05$Response_Address[1]
x
x <- tmp05$Response_Address[2]
x
x <- tmp05$Response_Address[3]
x
x <- tmp05$Response_Address[5]
x
x <- tmp05$Response_Address[5]
x
x %>% gregexpr(pattern = ";", text = .)
x <- tmp05$Response_Address[5]
x
idx <- x %>% gregexpr(pattern = ";", text = .) %>% unlist()
idx <- x %>% gregexpr(pattern = ";", text = .) %>% unlist() %>% min
res <- x %>% substring(., 1, idx-1)
res
tmp05$Address[5]
# ---
# 處理TGOS地址轉經緯度的結果
# 針對多個地址結果[Response_Address, Response_X, Response_Y]，取出第一個
# 如果原本就只有一個地址，就直接回傳。
# 如果偵測到";"，就拆解並回傳第一個。
# 地址用apply送進來
x <- tmp05$Response_Address[1]
x
idx <- x %>% gregexpr(pattern = ";", text = .) %>% unlist() %>% min
# ---
# 處理TGOS地址轉經緯度的結果
# 針對多個地址結果[Response_Address, Response_X, Response_Y]，取出第一個
# 如果原本就只有一個地址，就直接回傳。
# 如果偵測到";"，就拆解並回傳第一個。
# 地址用apply送進來
x <- tmp05$Response_Address[1]
x
idx <- x %>% gregexpr(pattern = ";", text = .) %>% unlist() %>% min
(idx==-1)
x
x <- tmp05$Response_Address[5]
x
idx <- x %>% gregexpr(pattern = ";", text = .) %>% unlist() %>% min
(idx==-1)
# ---
# - unicode編碼轉換為UTF-8編碼
# 地址用向量送進來
library(stringi)
library(dplyr)
unicode2utf8 <- function(x_vec){
t1 <- gsub("<U\\+(....)>", "\\\\u\\1", x_vec)
res <- t1 %>% stri_unescape_unicode()
return(res)
}
# ---
# 將地址依照門牌號分開，用useless決定要回傳哪一部分。
# 如果沒有偵測到門牌號
# - useless = F 則回傳完整地址
# - useless = T 則回傳 wrong address
# 地址用sapply送進來
library(dplyr)
addr.SPby.doornum <- function(x, useless = F){
idx <- x %>% gregexpr(pattern = "號", text = .) %>% unlist() %>% max
if (idx==-1 & !useless) res <- x
if (idx==-1 & useless) res <- "wrong_address"
if (idx!=-1 & !useless) res <- x %>% substring(., 1, idx)
if (idx!=-1 & useless) res <- x %>% substring(., idx+1)
return(res)
}
# ---
# 移除開頭的郵遞區號
# 地址用sapply送進來
library(dplyr)
rm.headpostcode <- function(x){
res <- x %>%
sub(x = ., pattern = "^[0-9]+", replacement = "") %>%
sub(x = ., pattern = "^\\([0-9]+\\)", replacement = "")
return(res)
}
# ---
# 移除多地址連結符號後的文字
# 地址用sapply送進來
library(dplyr)
rm.comb.addr <- function(x){
idx <- x %>% gregexpr(pattern = "-|,|、", text = .) %>% unlist() %>% min
if (idx==-1) res <- x
if (idx!=-1) res <- x %>% substring(., 1, idx-1)
return(res)
}
# ---
# 如果清理完的地址，最後一個字不是號，補上號字
# 地址用向量送進來
add.doornum.word <- function(x_vec){
t1 <- str_sub(string = x_vec, start = -1)
res <- ifelse(t1!="號", paste0(x_vec, "號"), x_vec)
return(res)
}
# ---
# 處理TGOS地址轉經緯度的結果
# 針對多個地址結果[Response_Address, Response_X, Response_Y]，取出第一個
# 如果原本就只有一個地址，就直接回傳。
# 如果偵測到";"，就拆解並回傳第一個。
# 地址、lon、lat分別用apply送進來
take.first.TGOSresult <- function(x){
idx <- x %>% gregexpr(pattern = ";", text = .) %>% unlist() %>% min
if (idx==-1) res <- x
else res <- x %>% substring(., 1, idx-1)
return(res)
}
tmp <- tmp05$Response_Address %>% sapply(., take.first.TGOSresult)
tmp %>% head
tmp <- tmp05$Response_Address %>% sapply(., take.first.TGOSresult, USE.NAMES = F)
tmp %>% head
rm(list = setdiff(ls(), lsf.str())); invisible(gc())
library(knitr)
library(kableExtra)
library(dplyr)
library(data.table)
library(Nippon)
library(stringi)
knitr::opts_chunk$set(
echo = TRUE,
message = FALSE,
warning = FALSE
)
TGOS_sample <- fread("../data_v1/Address_TGOS_sample.csv")
TGOS_sample %>% colnames()
tmp01 <- fread("../data_v1/address.csv", encoding = "UTF-8")
colnames(tmp01) <- c("Name", "Address", "Website", "Type")
address_tmp <- tmp01$Address %>%
unicode2utf8() %>%
sapply(., zen2han, USE.NAMES = F)
tmp01$useless_addr <- address_tmp %>% sapply(., addr.SPby.doornum, useless = T, USE.NAMES = F)
tmp01$useful_addr <- address_tmp %>% sapply(., addr.SPby.doornum, useless = F, USE.NAMES = F)
tmp01$clean_addr <- tmp01$useful_addr %>% sapply(., rm.headpostcode) %>% gsub(" +", "", .)
tmp01$clean_addr <- tmp01$clean_addr %>% sapply(., rm.comb.addr, USE.NAMES = F)
tmp01$clean_addr <- tmp01$clean_addr %>%
sapply(., addr.SPby.doornum, useless = F) %>%
add.doornum.word(x_vec = .)
tmp02 <- tmp01[useless_addr!="wrong_address"]
tmp02_others <- tmp01[useless_addr=="wrong_address"]
input <- tmp02[, .(id = .I, Address = clean_addr,
Response_Address = NA, Response_X = NA, Response_Y = NA)]
input
# ---
# 記得要上傳的檔案，必須用 big 編碼
write.csv(x = input, file = "../data_v1/input.csv",
fileEncoding = "big5", row.names = F)
tmp02_others
tmp02_others$clean_addr <- tmp02_others$useful_addr
tmp03 <- fread("../data_v1/Address_Finish_v2.csv", encoding = "UTF-8")
tmp04 <- cbind(tmp02, tmp03[, !c("id", "Address")])
idx <- (tmp04$Response_Address=="找不到指定的門牌地址。") %>% which
tmp05 <- tmp04[-idx]
tmp05_others <- rbind(tmp02_others,
tmp04[idx][, !c("Response_Address", "Response_X", "Response_Y")])
tmp05$Response_Address <- tmp05$Response_Address %>%
sapply(., take.first.TGOSresult, USE.NAMES = F)
tmp05$Response_X <- tmp05$Response_X %>%
sapply(., take.first.TGOSresult, USE.NAMES = F)
tmp05$Response_Y <- tmp05$Response_Y %>%
sapply(., take.first.TGOSresult, USE.NAMES = F)
View(tmp05)
View(tmp05_others)
rm(list = setdiff(ls(), lsf.str())); invisible(gc())
library(knitr)
library(kableExtra)
library(dplyr)
library(data.table)
library(Nippon)
library(stringi)
knitr::opts_chunk$set(
echo = TRUE,
message = FALSE,
warning = FALSE
)
TGOS_sample <- fread("../data_v1/Address_TGOS_sample.csv")
TGOS_sample %>% colnames()
tmp01 <- fread("../data_v1/address.csv", encoding = "UTF-8")
colnames(tmp01) <- c("Name", "Address", "Website", "Type")
address_tmp <- tmp01$Address %>%
unicode2utf8() %>%
sapply(., zen2han, USE.NAMES = F)
tmp01$useless_addr <- address_tmp %>% sapply(., addr.SPby.doornum, useless = T, USE.NAMES = F)
tmp01$useful_addr <- address_tmp %>% sapply(., addr.SPby.doornum, useless = F, USE.NAMES = F)
tmp01$clean_addr <- tmp01$useful_addr %>% sapply(., rm.headpostcode) %>% gsub(" +", "", .)
tmp01$clean_addr <- tmp01$clean_addr %>% sapply(., rm.comb.addr, USE.NAMES = F)
tmp01$clean_addr <- tmp01$clean_addr %>%
sapply(., addr.SPby.doornum, useless = F) %>%
add.doornum.word(x_vec = .)
tmp02 <- tmp01[useless_addr!="wrong_address"]
tmp02_others <- tmp01[useless_addr=="wrong_address"]
input <- tmp02[, .(id = .I, Address = clean_addr,
Response_Address = NA, Response_X = NA, Response_Y = NA)]
input
# ---
# 記得要上傳的檔案，必須用 big 編碼
write.csv(x = input, file = "../data_v1/input.csv",
fileEncoding = "big5", row.names = F)
tmp02_others
tmp02_others$clean_addr <- tmp02_others$useful_addr
tmp03 <- fread("../data_v1/Address_Finish_v2.csv", encoding = "UTF-8")
tmp04 <- cbind(tmp02, tmp03[, !c("id", "Address")])
idx <- (tmp04$Response_Address=="找不到指定的門牌地址。") %>% which
tmp05 <- tmp04[-idx]
tmp05_others <- rbind(tmp02_others,
tmp04[idx][, !c("Response_Address", "Response_X", "Response_Y")])
fwrite(x = tmp05_others, file = "../data_v1/tmp05_others.csv", row.names = F)
tmp05$Response_Address <- tmp05$Response_Address %>%
sapply(., take.first.TGOSresult, USE.NAMES = F)
tmp05$Response_X <- tmp05$Response_X %>%
sapply(., take.first.TGOSresult, USE.NAMES = F)
tmp05$Response_Y <- tmp05$Response_Y %>%
sapply(., take.first.TGOSresult, USE.NAMES = F)
tmp05_others_google <- fread("../data_v1/tmp05_others_geocode_google.csv", encoding = "UTF-8")
tmp05_others_google
tmp05 %>% colnames()
tmp05_others_google %>% colnames()
tmp05 %>% colnames()
tmp05_others_google %>% colnames()
tmp06 <- list(tmp05[, .(Name, Address, Website, Type, lon = Response_X, lat = Response_Y)],
tmp05_others_google[, .(Name, Address, Website, Type, lon = google_longitude, lat = google_latitude)])
tmp06 <- list(tmp05[, .(Name, Address, Website, Type, lon = Response_X, lat = Response_Y)],
tmp05_others_google[, .(Name, Address, Website, Type, lon = google_longitude, lat = google_latitude)]) %>% rbindlist()
fwrite(x = tmp06, file = "../data_v1/address_lonlat.csv", row.names = F)
rm(list = setdiff(ls(), lsf.str())); invisible(gc())
library(knitr)
library(kableExtra)
library(dplyr)
library(data.table)
library(Nippon)
library(stringi)
knitr::opts_chunk$set(
echo = TRUE,
message = FALSE,
warning = FALSE
)
TMP01 <- fread("../data_v1/address_lonlat.csv")
rm(list = setdiff(ls(), lsf.str())); invisible(gc())
library(knitr)
library(kableExtra)
library(dplyr)
library(data.table)
library(Nippon)
library(stringi)
knitr::opts_chunk$set(
echo = TRUE,
message = FALSE,
warning = FALSE
)
tmp01 <- fread("../data_v1/address_lonlat.csv")
tmp01
tmp01 <- fread("../data_v1/address_lonlat.csv", encoding = "UTF-8")
tmp01
tmp01 %>% colnames()
tmp02 <- tmp01[, .(id = .I, Name, Type, lon, lat)]
tmp02
tmp02$Type %>% unique()
tmp02_company <- tmp02[Type=="公司"]
tmp02_broker <- tmp02[Type=="券商"]
rm(list = setdiff(ls(), lsf.str())); invisible(gc())
library(knitr)
library(kableExtra)
library(dplyr)
library(data.table)
library(Nippon)
library(stringi)
library(sp)
knitr::opts_chunk$set(
echo = TRUE,
message = FALSE,
warning = FALSE
)
tmp01 <- fread("../data_v1/address_lonlat.csv", encoding = "UTF-8")
tmp02 <- tmp01[, .(id = .I, Name, Type, lon, lat)]
tmp02_company <- tmp02[Type=="公司"]
tmp02_broker <- tmp02[Type=="券商"]
sp::spDists()
nrow(tmp02_company)
i <- 1
# print(i) #顯示進度
tmp_lon <- tmp02_company[i, lon]
tmp_lat <- tmp02_company[i, lat]
tmp02_broker[lon>=tmp_lon-0.2 & lon<=tmp_lon+0.2, ][lat>=tmp_lat-0.2 & lat<=tmp_lat+0.2]
t1 <- tmp02_broker[lon>=tmp_lon-0.2 & lon<=tmp_lon+0.2,
][lat>=tmp_lat-0.2 & lat<=tmp_lat+0.2]
t1[, .(lon, lat)]
t1[, .(lon, lat)] %>% as.matrix()
t2 <- spDistsN1(pts = as.matrix(t1[, .(lon, lat)]),
pt = c(tmp_lon, tmp_lat))
t2
spDistsN1(pts = matrix(c(0,0,0,90), ncol = 2, byrow = T),
pt = c(0, 0))
spDistsN1(pts = matrix(c(0,0,0,90), ncol = 2, byrow = T),
pt = c(0, 0), longlat = T)
tmp02_company
t1
res_tmp <- list()
i <- 1
for (i in 1:nrow(tmp02_company)) {
print(i) #顯示進度
tmp_lon <- tmp02_company[i, lon]
tmp_lat <- tmp02_company[i, lat]
t1 <- tmp02_broker[lon>=tmp_lon-0.2 & lon<=tmp_lon+0.2,
][lat>=tmp_lat-0.2 & lat<=tmp_lat+0.2]
# ---
for (ii in 1:nrow(t1)) {
t2 <- spDistsN1(pts = as.matrix(t1[, .(lon, lat)]),
pt = c(tmp_lon, tmp_lat),
longlat = T) %>% `*`(1000) #meter
}
res <- data.table(id_company = tmp02_company[i, id],
Name_company = tmp02_company[i, Name],
id_broker = t1$id,
Name_broker = t1$Name,
distance = t2)
res_tmp[[i]] <- res
}
i
print(i) #顯示進度
tmp_lon <- tmp02_company[i, lon]
tmp_lat <- tmp02_company[i, lat]
t1 <- tmp02_broker[lon>=tmp_lon-0.2 & lon<=tmp_lon+0.2,
][lat>=tmp_lat-0.2 & lat<=tmp_lat+0.2]
t1
(nrow(t1)==0)
# for (i in 1:nrow(tmp02_company)) {
for (i in 440:nrow(tmp02_company)) {
print(i) #顯示進度
tmp_lon <- tmp02_company[i, lon]
tmp_lat <- tmp02_company[i, lat]
t1 <- tmp02_broker[lon>=tmp_lon-0.2 & lon<=tmp_lon+0.2,
][lat>=tmp_lat-0.2 & lat<=tmp_lat+0.2]
# ---
if (nrow(t1)==0) next()
for (ii in 1:nrow(t1)) {
t2 <- spDistsN1(pts = as.matrix(t1[, .(lon, lat)]),
pt = c(tmp_lon, tmp_lat),
longlat = T) %>% `*`(1000) #meter
}
res <- data.table(id_company = tmp02_company[i, id],
Name_company = tmp02_company[i, Name],
id_broker = t1$id,
Name_broker = t1$Name,
distance = t2)
res_tmp[[i]] <- res
}
for (i in 470:nrow(tmp02_company)) {
print(i) #顯示進度
tmp_lon <- tmp02_company[i, lon]
tmp_lat <- tmp02_company[i, lat]
t1 <- tmp02_broker[lon>=tmp_lon-0.2 & lon<=tmp_lon+0.2,
][lat>=tmp_lat-0.2 & lat<=tmp_lat+0.2]
# ---
if (nrow(t1)==0) next()
for (ii in 1:nrow(t1)) {
t2 <- spDistsN1(pts = as.matrix(t1[, .(lon, lat)]),
pt = c(tmp_lon, tmp_lat),
longlat = T) %>% `*`(1000) #meter
}
res <- data.table(id_company = tmp02_company[i, id],
Name_company = tmp02_company[i, Name],
id_broker = t1$id,
Name_broker = t1$Name,
distance = t2)
res_tmp[[i]] <- res
}
res_tmp <- list()
i <- 1
for (i in 1:nrow(tmp02_company)) {
print(i) #顯示進度
tmp_lon <- tmp02_company[i, lon]
tmp_lat <- tmp02_company[i, lat]
t1 <- tmp02_broker[lon>=tmp_lon-0.2 & lon<=tmp_lon+0.2,
][lat>=tmp_lat-0.2 & lat<=tmp_lat+0.2]
# ---
if (nrow(t1)==0) next()
for (ii in 1:nrow(t1)) {
t2 <- spDistsN1(pts = as.matrix(t1[, .(lon, lat)]),
pt = c(tmp_lon, tmp_lat),
longlat = T) %>% `*`(1000) #meter
}
res <- data.table(id_company = tmp02_company[i, id],
Name_company = tmp02_company[i, Name],
id_broker = t1$id,
Name_broker = t1$Name,
distance = t2)
res_tmp[[i]] <- res
}
View(tmp01)
res <- res_tmp %>% rbindlist()
res <- res[distance<=10*1000, ]
fwrite(x = res, file = "../data_v1/company_10km_broker.csv", row.names = F)
fwrite(x = tmp02, file = "../data_v1/company_broker_idlonlat.csv", row.names = F)
